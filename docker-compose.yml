services:
  django:
    ports:
      - "8000:8000"
    volumes:
      - static_files:/home/app/dj_vpn/staticfiles
    container_name: django_vpn
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - DEBUG=${DEBUG}
      - PROD_SECRET_KEY=${PROD_SECRET_KEY}
      - GOOGLE_OAUTH2_TOKEN=${GOOGLE_OAUTH2_TOKEN}
      - VPS_POSTDB_HOST=${VPS_POSTDB_HOST}
      - VPS_POSTDB_PORT=${VPS_POSTDB_PORT}
      - VPS_POSTDB_NAME=${VPS_POSTDB_NAME}
      - VPS_POSTDB_USER=${VPS_POSTDB_USER}
      - VPS_POSTDB_PASSWORD=${VPS_POSTDB_PASSWORD}
      - PROD_DOCKER_BROKER_URL=${PROD_DOCKER_BROKER_URL}
      - PROD_DOCKER_RESULT_BACKEND=${PROD_DOCKER_RESULT_BACKEND}
    depends_on:
      - db

  db:
    container_name: vpn_postgres
    image: postgres:16.6-alpine
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: ${VPS_POSTDB_USER}
      POSTGRES_DB: ${VPS_POSTDB_NAME}
      POSTGRES_PASSWORD: ${VPS_POSTDB_PASSWORD}

  redis:
    container_name: vpn_redis
    expose:
      - 6379
    depends_on:
      - db
#    ports:
#      - "6380:6379"
    image: redis:7.4.2-alpine
    restart: always
#    entrypoint: ["sh", "-c", '/home/app/redis_entrypoint.sh', "redis-server"]

  celery:
    container_name: celery
    restart: always
    command: celery -A dj_vpn.vpn.dj_celery worker -l INFO
    ports:
      - "8002:8000"
    environment:
      - DEBUG=${DEBUG}
    depends_on:
      - redis

  nginx:
    container_name: vpn_nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    restart: always
    image: nginx:1.27.5-alpine
    volumes:
      - static_files:/vol/
      - ./nginx.conf:/etc/nginx/nginx.conf
    command: ["nginx", "-g", "daemon off;"]
    ports:
#      - "8080:80"
      - "80:80"
    depends_on:
      - django

volumes:
  postgres_data:
  static_files:
