version: "3.9"

services:
  django:
    container_name: django_vpn
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: ".env"

  db:
    container_name: vpn_postgres
    image: postgres:16.6-alpine
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - static_file:/home/app/staticfiles
    restart: always
    environment:
      POSTGRES_USER: ${VPS_POSTDB_USER}
      POSTGRES_DB: ${VPS_POSTDB_NAME}
      POSTGRES_PASSWORD: ${VPS_POSTDB_PASSWORD}

  redis:
    container_name: vpn_redis
    image: redis:7.4-alpine
    restart: always
    entrypoint: ['/home/app/redis_entrypoint.sh', "redis-server"]

  nginx:
    container_name: vpn_nginx
    image: nginx:1.27-alpine
    volumes:
      - static_files:/vol/
      - ./nginx.conf:/etc/nginx/nginx.conf
    command: ["nginx", "-g", "demon off;"]
    ports:
      - "80:80"
      - "443:443"

#  celery:
#    container_name: vpn_celery
#    build:
#      context: .
#    restart: always
#    command: celery -A dj_vpn.vpn worker -l INFO
#    volumes:
#      - ./:/home/app
#    ports:
#      - "8002:8000"
#    environment:
#      - DEBUG=${DEBUG}
#    depends_on:
#      - redis

volumes:
  postgres_data:
  static_files:
