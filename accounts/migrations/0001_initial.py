# Generated by Django 5.1.4 on 2025-01-02 14:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "is_deleted",
                    models.BooleanField(blank=True, editable=False, null=True),
                ),
                (
                    "mobile_phone",
                    models.CharField(
                        blank=True,
                        help_text="شماره موبایل کاربر",
                        max_length=15,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, help_text="تاریخ تولد", null=True),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("normal_user", "Normal User"),
                            ("premium_user", "Premium User"),
                        ],
                        default="normal_user",
                        max_length=15,
                    ),
                ),
                (
                    "accounts_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("limit", "Limit"),
                            ("expired", "Expired"),
                            ("ben", "Ben"),
                            ("nothing", "Nothing"),
                        ],
                        default="nothing",
                        max_length=15,
                    ),
                ),
                ("volume", models.PositiveIntegerField()),
                ("volume_usage", models.PositiveIntegerField()),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ContentDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "is_deleted",
                    models.BooleanField(blank=True, editable=False, null=True),
                ),
                (
                    "device_model",
                    models.CharField(help_text="نام دستگاه", max_length=255),
                ),
                ("device_os", models.CharField(help_text="نسخه دستگاه", max_length=50)),
                (
                    "device_brand",
                    models.CharField(help_text="برند گوشی", max_length=50),
                ),
                ("device_number", models.CharField(max_length=255)),
                ("ip_address", models.GenericIPAddressField(help_text="ادرس ای پی")),
                ("connected_at", models.DateTimeField(auto_now=True)),
                (
                    "is_blocked",
                    models.BooleanField(default=False, help_text="بلاک شدن"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="کاربر",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="user_device",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "content_device",
            },
        ),
        migrations.CreateModel(
            name="PrivateNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "is_deleted",
                    models.BooleanField(blank=True, editable=False, null=True),
                ),
                ("title", models.CharField(help_text="عنوان اعلانات", max_length=255)),
                ("body", models.TextField(help_text="متن اعلانات")),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="قابل نمایش"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="گاربر",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "private_notification",
            },
        ),
    ]
