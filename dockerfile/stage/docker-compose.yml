version: "3.9"

services:
  redis:
    container_name: redis-container
    image: redis:7.4.2-alpine
    restart: always
    ports:
      - "6382:6379"
    command:
      - redis-server --save 60 1 --loglevel warning

  db:
    container_name: postgres-container
    image: postgres:16.4-alpine
    volumes:
      - vpn_stage_postgres_data:/var/lib/postgresql/data
    restart: always
    env_file:
      - ../../envs/stage/db/.env
    healthcheck:
      test: ['CMD-SHELL', 'pg_is_ready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    container_name: django-container
    build:
      context: ../../
      dockerfile: dockerfile/stage/Dockerfile
    command:
      sh -c "python manage.py check_database && \
            python manage.py makemigrations --noinput && \
            python manage.py migrate --noinput && \
            python manage.py collectstatic --noinput && \
            gunicorn --bind 0.0.0.0:8000 vpn.wsgi"
    volumes:
      - static_volume:/vol/django-static/staticfiles
      - media_volume:/vol/django-media/media
    expose:
      - 8000
    env_file:
      - ../../envs/stage/django/.env
    depends_on:
      - redis
      - db

  nginx:
      container_name: nginx-container
      image: nginx:1.27-alpine
      build:
        context: ../../
        dockerfile: dockerfile/stage/Dockerfile
      restart: always
      ports:
        - "8083:80"
      volumes:
        - static_volume:/home/app/static
        - media_volume:/home/app/media
        - /home/app:/usr/share/nginx/html
      depends_on:
        - django
volumes:
  static_volume:
  media_volume:
  vpn_stage_postgres_data:
